const Marksheet = require('mongoose').model('Marksheet');
const Exam = require('mongoose').model('Exam');
const mongoose = require("mongoose");
const User = require('mongoose').model('User');
const async = require('async');

const myDelete = function(exam){
	for(let i=0; i< exam.length; i++){
		Exam.findOne({
			_id: exam[i]
		})
		.remove(function(err){
			if(err) return res.send('some error occured'); //ned to change instead of res thet should be some callback
		});
	}
}

module.exports = function(_id, course, cb){
	Marksheet.findOne({
		_id
	})
	.exec(function(err, marksheet){
		if(err) return cb(err);
		//First delete exam subdocuments
		if(marksheet){
			async.eachOf(marksheet.email, function(value, i, callBack){
				User.findOne({
					email: value,
				})
				.populate('courses')
				.exec(function(err){
					if(err) return callBack(err);
					User.update({email: value}, {$pull: {courses: course._id}}, function(err){
						if(err){console.log(err); return callBack(err);}
						return callBack(null);
					});
				});
			}, function(err){
				if(err) return cb(err);
				myDelete(marksheet.quiz);
				myDelete(marksheet.mid);
				myDelete(marksheet.assignment);
				myDelete(marksheet.project);
				myDelete(marksheet.presentation);
				myDelete(marksheet.fieldWork);
				myDelete(marksheet.final);
				//Now delete marksheet
				Marksheet.findOne({
					_id
				})
				.remove(function(err){
					if (err) return cb(err);
					return cb(null);
				});
			});
		}
	})
}